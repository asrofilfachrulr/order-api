{
	"info": {
		"_postman_id": "2b40b70c-31f8-4247-9acc-4ec94b7b3635",
		"name": "Order API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "order",
			"item": [
				{
					"name": "root",
					"item": [
						{
							"name": "POST  with correct request body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Status is [success]\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).equal(\"success\");\r",
											"});\r",
											"\r",
											"// save registered id for next testing\r",
											"var jsonData = pm.response.json();\r",
											"pm.environment.set(\"correctOrderId\", jsonData.data.orderId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"id\": 3,\r\n            \"qty\": {{qty1}}\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"qty\": {{qty2}}\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/v1/order",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST  with wrong Menu ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status is [success]\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).equal(\"Error: Bad Request\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"id\": 999,\r\n            \"qty\": 5\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"qty\": 1\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/v1/order",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST  with empty items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status is [success]\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).equal(\"Error: Bad Request\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"items\": [\r\n        \r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/v1/order",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST with missing items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status is [success]\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).equal(\"Error: Bad Request\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/v1/order",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST  with one of item's quantity is zero",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status is [success]\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).equal(\"Error: Bad Request\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"id\": 1,\r\n            \"qty\": {{qty1}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"qty\": 0\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/v1/order",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST  with menu id is wrong type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status is [success]\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).equal(\"Error: Bad Request\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"id\": \"1\",\r\n            \"qty\": {{qty1}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"qty\": 0\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/v1/order",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"order"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const qty1 = Math.floor(Math.random() * 10);",
									"const qty2 = Math.floor(Math.random() * 10);",
									"",
									"pm.environment.set(\"qty1\", qty1 + 1);",
									"pm.environment.set(\"qty2\", qty2 + 1);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": ":orderId",
					"item": [
						{
							"name": "Get Specific Order",
							"item": [
								{
									"name": "Get Specific Order by Correct orderId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code must be 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost:8080/api/v1/order/{{correctOrderId}}",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"order",
												"{{correctOrderId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Specific Order by Wrong orderId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code must be 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost:8080/api/v1/order/{{wrongOrderId}}",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"order",
												"{{wrongOrderId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Update Specific Order",
							"item": [
								{
									"name": "Update Specific Order by Correct [orderId] and Complete Attributes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const qty1 = Math.floor(Math.random() * 10);\r",
													"const qty2 = Math.floor(Math.random() * 10);\r",
													"\r",
													"pm.environment.set(\"qty1\", qty1 + 1);\r",
													"pm.environment.set(\"qty2\", qty2 + 1);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"conflict\",\r\n    \"items\": [\r\n        {\r\n            \"id\": 3,\r\n            \"qty\": {{qty2}}\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"qty\": {{qty1}}\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/api/v1/order/{{correctOrderId}}",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"order",
												"{{correctOrderId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Specific Order by Correct [orderId] and Only Its [status]",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"paid\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/api/v1/order/{{correctOrderId}}",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"order",
												"{{correctOrderId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Specific Order by Correct [orderId] and Only Its [items]",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"id\": 1,\r\n            \"qty\": {{qty2}}\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"qty\": {{qty1}}\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/api/v1/order/{{correctOrderId}}",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"order",
												"{{correctOrderId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Specific Order by Correct [orderId] and New Item (to add)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"id\": 4,\r\n            \"qty\": 96\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"qty\": 69\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/api/v1/order/{{correctOrderId}}",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"order",
												"{{correctOrderId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Specific Order by Correct [orderId] and Missing [qty] (to delete)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"id\": 3,\r\n            \"qty\": 69\r\n        },\r\n        {\r\n            \"id\": 1\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/api/v1/order/{{correctOrderId}}",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"order",
												"{{correctOrderId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Specific Order by Wrong [orderId]",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "localhost:8080/api/v1/order/{{wrongOrderId}}",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"order",
												"{{wrongOrderId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Specific Order by Missing Attribute",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"none\": \"nope\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/api/v1/order/{{correctOrderId}}",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"order",
												"{{correctOrderId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Specific Order by Wrong Attribute Type 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": true,\r\n    \"items\": [\r\n        {\r\n            \"id\": 2,\r\n            \"qty\": {{qty1}}\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"qty\": {{qty1}}\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/api/v1/order/{{correctOrderId}}",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"order",
												"{{correctOrderId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Specific Order by Wrong Attribute Type 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"paid\",\r\n    \"items\": [\r\n        {\r\n            \"id\": \"id\",\r\n            \"qty\": {{qty1}}\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"qty\": {{qty1}}\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/api/v1/order/{{correctOrderId}}",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"order",
												"{{correctOrderId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Specific Order by Wrong [status] Value",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"whatever\",\r\n    \"items\": [\r\n        {\r\n            \"id\": 3,\r\n            \"qty\": {{qty1}}\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"qty\": {{qty2}}\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/api/v1/order/{{correctOrderId}}",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"order",
												"{{correctOrderId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete Specific Order",
							"item": [
								{
									"name": "Delete Specific Order with Correct [orderId]",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "localhost:8080/api/v1/order/{{correctOrderId}}",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"order",
												"{{correctOrderId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Specific Order with Wrong [orderId]",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "localhost:8080/api/v1/order/{{wrongOrderId}}",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"order",
												"{{wrongOrderId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const qty1 = Math.floor(Math.random() * 10);",
									"const qty2 = Math.floor(Math.random() * 10);",
									"",
									"pm.environment.set(\"qty1\", qty1 + 1);",
									"pm.environment.set(\"qty2\", qty2 + 1);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "orders",
			"item": [
				{
					"name": "GET all order",
					"item": [
						{
							"name": "Get All Order Without Any Filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/v1/orders",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Order With Wrong Filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/v1/orders?nofilter=sike",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"orders"
									],
									"query": [
										{
											"key": "nofilter",
											"value": "sike"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Order With Correct [status] filter = [paid]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/v1/orders?status=paid",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"orders"
									],
									"query": [
										{
											"key": "status",
											"value": "paid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Order With Correct [status] filter = [unpaid]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/v1/orders?status=unpaid",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"orders"
									],
									"query": [
										{
											"key": "status",
											"value": "unpaid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Order With Correct [status] filter = [conflict]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/v1/orders?status=conflict",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"orders"
									],
									"query": [
										{
											"key": "status",
											"value": "conflict"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Order With Wrong [status] filter value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/v1/orders?status=sike",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"orders"
									],
									"query": [
										{
											"key": "status",
											"value": "sike"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}